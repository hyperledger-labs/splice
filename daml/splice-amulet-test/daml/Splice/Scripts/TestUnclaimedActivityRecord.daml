-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Splice.Scripts.TestUnclaimedActivityRecord where

import DA.Assert
import DA.Time

import Daml.Script

import Splice.Amulet
import Splice.AmuletRules

import Splice.Scripts.Util

test_AmuletRules_CreateUnclaimedActivityRecord : Script ()
test_AmuletRules_CreateUnclaimedActivityRecord = script do
  DefaultAppWithUsers{..} <- setupDefaultAppWithUsers
  [(amuletRulesCid, _)] <- query @AmuletRules app.dso
  now <- getTime
  let 
    dso = app.dso
    beneficiary = aliceValidator.primaryParty
    amount = 10.0
    reason = "Alice validator is doing great"
    expiresAt = addRelTime now (days 2)
    valid_AmuletRules_CreateUnclaimedActivityRecord = 
      AmuletRules_CreateUnclaimedActivityRecord with 
        beneficiary
        amount
        reason
        expiresAt

  -- Unhappy paths - wrong amount 
  submitMustFail dso $ 
    exerciseCmd amuletRulesCid  
      valid_AmuletRules_CreateUnclaimedActivityRecord with amount = 0.0
  submitMustFail dso $ 
    exerciseCmd amuletRulesCid 
      valid_AmuletRules_CreateUnclaimedActivityRecord with amount = -10.0

  -- Happy path 
  submit dso $ 
    exerciseCmd amuletRulesCid valid_AmuletRules_CreateUnclaimedActivityRecord
  [(_, unclaimedActivityRecord)] <- query @UnclaimedActivityRecord beneficiary
  unclaimedActivityRecord === 
    UnclaimedActivityRecord with 
      dso 
      beneficiary
      amount
      reason 
      expiresAt 
  pure ()

test_AmuletRules_ExpireUnclaimedActivityRecord : Script ()
test_AmuletRules_ExpireUnclaimedActivityRecord = script do
  DefaultAppWithUsers{..} <- setupDefaultAppWithUsers
  [(amuletRulesCid, _)] <- query @AmuletRules app.dso
  now <- getTime
  let 
    dso = app.dso
    beneficiary = aliceValidator.primaryParty
    amount = 10.0
    reason = "Alice validator is doing great"
    expiresAt = addRelTime now (days 2)

  -- Create an UnclaimedActivityRecord
  result <- submit dso $
    exerciseCmd amuletRulesCid AmuletRules_CreateUnclaimedActivityRecord with 
      beneficiary
      amount
      reason
      expiresAt

  -- Unhappy path - UnclaimedActivityRecordCid has not expired
  submitMustFail dso $ 
    exerciseCmd amuletRulesCid AmuletRules_ExpireUnclaimedActivityRecord with 
      unclaimedActivityRecordCid = result.unclaimedActivityRecordCid
  -- Happy path 
  setTime expiresAt
  submit dso $ 
    exerciseCmd amuletRulesCid AmuletRules_ExpireUnclaimedActivityRecord with 
      unclaimedActivityRecordCid = result.unclaimedActivityRecordCid
  pure ()
