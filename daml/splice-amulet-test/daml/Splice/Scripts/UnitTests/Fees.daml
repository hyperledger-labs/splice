-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | Unit tests for the fees module
module Splice.Scripts.UnitTests.Fees where

import DA.Action (unless)
import DA.Assert ((===))
import DA.Time

import Daml.Script

import Splice.Fees

test_toRatePerDay : Script ()
test_toRatePerDay = do
    expectedRatePerDay === ratePerRoundToRatePerDay ratePerRound tickDuration
  where
    expectedRatePerDay = RatePerDay with rate = ratePerRound.rate * 24.0 * 6.0

    ratePerRound : RatePerRound
    ratePerRound = RatePerRound with rate = 0.02

    tickDuration : RelTime
    tickDuration = minutes 10

test_chargeRatePerDay : Script ()
test_chargeRatePerDay = do
    expectedCharge === chargeRatePerDay ratePerDay (days 101)
  where
    expectedCharge = 101.0 * 0.03
    ratePerDay = RatePerDay with rate = 0.03

test_validSteppedRate : Script ()
test_validSteppedRate = do
    test True 0.1 [(100.0, 0.001), (1000.0, 0.0001), (100000.0, 0.00001)]
    test True 0.1 [(100.0, 0.0)]
    test True 0.1 [(100.0, 0.0), (1000.0, 0.0), (100000.0, 0.0)]
    test True 0.0 [(100.0, 0.0), (1000.0, 0.0), (100000.0, 0.0)]
    test True 0.1 []
    test True 0.0 []
    test False 0.1 [(100.0, 0.001), (100.0, 0.0001)]
    test False 0.1 [(100.0, 0.001), (90.0, 0.0001)]
    test False (-0.1) []
    test False 0.1 [(100.0, -0.001)]
  where
    test isValid initialRate steps = do
        let steppedRate = SteppedRate with initialRate, steps
        unless (isValid == validSteppedRate steppedRate) $
            error $ "SteppedRate validity check failed for " <> show (isValid, steppedRate)
