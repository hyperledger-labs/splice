# Copyright (c) 2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

openapi: 3.0.0
info:
  title: allocation off-ledger API
  description: |
    Implemented by token registries for the purpose of the use and management of
    allocations by wallets and apps orchestrating the settlement of asset transfers.
  version: 1.0.0
paths:

  /registry/allocations/{allocation_id}/choice-contexts/execute-transfer:
    get:
      operationId: "getAllocationTransferContext"
      description: |
        Get the choice context to execute a transfer on an allocation.
      parameters:
        - name: allocation_id
          description: "The contract ID of the allocation whose transfer the caller wants to execute."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChoiceContext"
        "404":
          $ref: "#/components/responses/404"

  /registry/allocations/{allocation_id}/choice-contexts/withdraw:
    get:
      operationId: "getAllocationWithdrawContext"
      description: |
        Get the choice context to withdraw an allocation.
      parameters:
        - name: allocation_id
          description: "The contract ID of the allocation to withdraw."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChoiceContext"
        "404":
          $ref: "#/components/responses/404"

  /registry/allocations/{allocation_id}/choice-contexts/cancel:
    get:
      operationId: "getAllocationCancelContext"
      description: |
        Get the choice context to cancel an allocation.
      parameters:
        - name: allocation_id
          description: "The contract ID of the allocation to cancel."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChoiceContext"
        "404":
          $ref: "#/components/responses/404"

components:
  responses:
    "404":
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    ChoiceContext:
      description: |
        The context required to exercise a choice on a contract via an interface.
        Used to retrieve additional reference date that is passed in via disclosed contracts,
        which are in turn referred to via their contract ID in the `choice_context_data`.
      type: object
      properties:
        choice_context_data:
          description: "The additional data to use when exercising the choice."
          type: object
        disclosed_contracts:
          description: |
            The contracts that are required to be disclosed to the participant node for exercising
            the choice.
          type: array
          items:
            $ref: "#/components/schemas/DisclosedContract"
      required:
        [
          "transfer_execution_choice_context",
          "disclosed_contracts",
        ]

    # TODO(#83): share with the other usages of disclosed contracts in the other standards.
    DisclosedContract:
      type: object
      properties:
        template_id:
          type: string
        contract_id:
          type: string
        created_event_blob:
          type: string
        synchronizer_id:
          description: |
            The synchronizer to which the contract is currently assigned.
            If the contract is in the process of being reassigned, then a "409" response is returned.
          type: string
        debug_package_name:
          description: |
            The name of the Daml package that was used to create the contract.
            Use this data only if you trust the provider, as it might not match the data in the
            `created_event_blob`.
          type: string
        debug_payload:
          description: |
            The contract arguments that were used to create the contract.
            Use this data only if you trust the provider, as it might not match the data in the
            `created_event_blob`.
          type: object
        debug_created_at:
          description: |
            The ledger effective time at which the contract was created.
            Use this data only if you trust the provider, as it might not match the data in the
            `created_event_blob`.
          type: string
          format: date-time
      required:
        [
          "template_id",
          "contract_id",
          "created_event_blob",
          "synchronizer_id"
        ]

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
