-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | Instruct transfers of holdings between parties.
module Splice.Api.Token.TransferPreapprovalV1 where


import Splice.Api.Token.MetadataV1

{-

Ideas left out:
- network wide blanket approvals:
    - tricky wrt confidentiality: DSO must only be an observer
    - do not replace registry-specific preapprovals: registries want their
      own preapprovals to support featured app markers and reward sharing
    - more complex management: wallets need to understand them as distinct
      from registry-specific preapprovals, and know how to allocate them and
      how to display them.
- volume-bounded approvals: too complex to implement as they require mutable
  on-ledger state, which likely results in contention

- allowing to not create the intermediate TransferInstruction:
    - not done to avoid



-}


-- TransferPreapproval
------------------------

-- | Specification of which incoming transfers are pre-approved by a receiver.
data PreapprovalSpecification = PreapprovalSpecification with
    admin : Party
      -- ^ Admin party of the holidings whose transfers are preapproved.
    receiver : Party
      -- ^ Receiver that preapproves incoming transfers.
    senderFilter : [Party]
      -- ^ Optional filter for which parties are allowed to send funds.
      -- Empty list means no filter is applied.
    idFilter : [Text]
      -- ^ Optional filter on the instrument identifiers that are preapproved.
      -- Empty list means no filter is applied.
    minAmount : Optional Decimal
      -- ^ Optional lower bound on the amount whose transfer is preapproved.
    maxAmount : Optional Decimal
      -- ^ Optional upper bound on the amount whose transfer is preapproved.
  deriving (Eq, Show)


-- | View for `TransferPreapproval`.
data TransferPreapprovalView = TransferPreapprovalView with
    specification : PreapprovalSpecification
      -- ^ Specification of which transfers are preapproved.
    requestedAt : Time
      -- ^ When the preapproval was requested to be created.
    expiresAt : Time
      -- ^ When the preapproval expires.
    meta : Metadata
      -- ^ Additional metadata specific to the preapproval, used for extensibility.
  deriving (Eq, Show)

-- | An interface for tracking the status of a transfer instruction,
-- i.e., a request to a registry app to execute a transfer.
--
-- Registries MAY evolve the transfer instruction in multiple steps. They SHOULD
-- do so using only the choices on this interface, so that wallets can reliably
-- parse the transaction history and determine whether the instruction ultimately
-- succeeded or failed.
interface TransferPreapproval where
  viewtype TransferPreapprovalView

  transferPreapproval_renewImpl : ContractId TransferPreapproval -> TransferPreapproval_Renew -> Update TransferPreapproval_RenewResult
  transferPreapproval_withdrawImpl : ContractId TransferPreapproval -> TransferPreapproval_Withdraw -> Update ChoiceExecutionMetadata
  transferPreapproval_rejectImpl : ContractId TransferPreapproval -> TransferPreapproval_Reject -> Update ChoiceExecutionMetadata


  choice TransferPreapproval_Renew : TransferPreapproval_RenewResult
    -- ^ Renew the preapproval as the delegate or receiver.
    --
    -- Can also be used to update the specification and expiration time.
    with
      specification : PreapprovalSpecification
        -- ^ New specification of which transfers are preapproved.
      requestedAt : Time
        -- ^ When the preapproval was requested to be (re-)created.
      expiresAt : Optional Time
        -- ^ New expiration time of the preapproval.
        --
        -- Will be capped by the maximal expiration time allowed by the instrument admin;
        -- and if not provided, the maximal expiration time will be used.
      extraArgs : ExtraArgs
        -- ^ Additional context required in order to exercise the choice.
        --
        -- FIXME: decide whether we really want to the full extra context here?
    controller (view this).specification.receiver
    do transferPreapproval_renewImpl this self arg

  choice TransferPreapproval_Withdraw : ChoiceExecutionMetadata
    -- ^ Withdraw the transfer preapproval as the receiver.
    with
      extraArgs : ExtraArgs
        -- ^ Additional context required in order to exercise the choice.
        --
        -- FIXME: decide whether we really want to the full extra context here?
    controller (view this).specification.receiver
    do transferPreapproval_withdrawImpl this self arg

  choice TransferPreapproval_Reject : ChoiceExecutionMetadata
    -- ^ Reject the transfer preapproval as the instrument admin.
    with
      extraArgs : ExtraArgs
        -- ^ Additional context required in order to exercise the choice.
        --
        -- FIXME: decide whether we really want to the full extra context here?
    controller (view this).specification.admin
    do transferPreapproval_rejectImpl this self arg

data TransferPreapproval_RenewResult = TransferPreapproval_RenewResult with
    preapprovalCid : ContractId TransferPreapproval
      -- ^ The renewed preapproval contract.
    meta : Metadata
      -- ^ Additional metadata specific to the result of the choice, used for extensibility.
  deriving (Show, Eq)


data PreapprovalFactory_PreapproveResult = PreapprovalFactory_PreapproveResult with
    preapprovalCid : ContractId TransferPreapproval
      -- ^ The created preapproval contract.
    meta : Metadata
      -- ^ Additional metadata specific to the result of the choice, used for extensibility.
  deriving (Show, Eq)


-- Preapproval Factory
----------------------

-- | A factory contract to create transfer preapprovals.
interface PreapprovalFactory where
  viewtype PreapprovalFactoryView

  preapprovalFactory_preapproveImpl : ContractId PreapprovalFactory -> PreapprovalFactory_Preapprove -> Update PreapprovalFactory_PreapproveResult
  preapprovalFactory_publicFetchImpl : ContractId PreapprovalFactory -> PreapprovalFactory_PublicFetch -> Update PreapprovalFactoryView

  nonconsuming choice PreapprovalFactory_Preapprove : PreapprovalFactory_PreapproveResult
    -- ^ Create a new transfer preapproval.
    -- Implementations MUST ensure that this choice fails if `transfer.executeBefore` is in the past.
    --
    -- Implementations MAY limit the number of active preapprovals per receiver.
    with
      expectedAdmin : Party
        -- ^ The expected admin party issuing the factory. Implementations MUST validate that this matches
        -- the admin of the factory.
        -- Callers SHOULD ensure they get `expectedAdmin` from a trusted source, e.g., a read against
        -- their own participant. That way they can ensure that it is safe to exercise a choice
        -- on a factory contract acquired from an untrusted source *provided*
        -- all vetted Daml packages only contain interface implementations
        -- that check the expected admin party.
      specification : PreapprovalSpecification
        -- ^ The transfer to execute.
      extraArgs : ExtraArgs
        -- ^ The extra arguments to pass to the transfer implementation.
    controller specification.receiver
    do preapprovalFactory_preapproveImpl this self arg

  nonconsuming choice PreapprovalFactory_PublicFetch : PreapprovalFactoryView
    -- ^ Fetch the view of the factory contract.
    with
      expectedAdmin : Party
        -- ^ The expected admin party issuing the factory. Implementations MUST validate that this matches
        -- the admin of the factory.
        -- Callers SHOULD ensure they get `expectedAdmin` from a trusted source, e.g., a read against
        -- their own participant. That way they can ensure that it is safe to exercise a choice
        -- on a factory contract acquired from an untrusted source *provided*
        -- all vetted Daml packages only contain interface implementations
        -- that check the expected admin party.
      actor : Party
        -- ^ The party fetching the contract.
    controller actor
    do preapprovalFactory_publicFetchImpl this self arg

-- | View for `PreapprovalFactory`.
data PreapprovalFactoryView = PreapprovalFactoryView
  with
    admin : Party
      -- ^ The party representing the registry app that administers the instruments for
      -- which this transfer factory can be used.
    meta : Metadata
      -- ^ Additional metadata specific to the transfer factory, used for extensibility.
  deriving (Show, Eq)
