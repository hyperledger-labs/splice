name: "Save frontend node_modules cache"
description: "Saves the frontend npm install cache"
inputs:
  cache_version:
    description: "Version of the cache"
    required: true
  load_cache_hit:
    description: "Cache hit from the restore SBT job (should be the cache_hit output from the restore SBT job)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Archive frontend node_modules
      if: ${{ ! fromJson(inputs.load_cache_hit) }}
      shell: bash
      run: |
        mkdir -p /tmp/npm_install
        find apps/ \( -path '*/node_modules' -a -not -path '*/node_modules/*/node_modules' -a -not -path '*openapi-ts-client/*' \)  | tar --use-compress-program=pigz -cf /tmp/npm_install/node_modules.tar.gz -T -
        find apps/ \( -path '*openapi-ts-client/*' \)  | tar --use-compress-program=pigz -cf /tmp/npm_install/openapi-ts-client.tar.gz -T -
    - name: Cache frontend node_modules
      if: ${{ ! fromJson(inputs.load_cache_hit) }}
      uses: actions/cache/save@v4
      with:
        path: /tmp/npm_install
        key: frontend-npm-install-${{ inputs.cache_version }} branch:${{ github.ref_name }} dependencies:${{ hashFiles('apps/package-lock.json', 'openapi-cache-key.txt', 'project/BuildCommon.scala') }} rev:${{ github.sha }}
    - name: Not archiving frontend node_modules
      if: ${{ fromJson(inputs.load_cache_hit) }}
      shell: bash
      run: |
        echo "Skipping saving frontend node_modules cache, as there was a cache hit"
