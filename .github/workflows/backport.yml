name: Backport a commit or PR across branches
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'A commit SHA to backport (either commit_sha or pr_number must be provided)'
        required: false
        type: string
      pr_number:
        description: 'A merged PR to backport (either commit_sha or pr_number must be provided)'
        required: false
        type: number
      base_branch:
        description: 'The branch to backport to'
        required: true
        type: string
      reviewer:
        description: 'The GitHub username of a reviewer to request a review from (currently supports only one reviewer)'
        required: false
        type: string
  workflow_call:
    inputs:
      commit_sha:
        description: 'A commit SHA to backport (either commit_sha or pr_number must be provided)'
        required: false
        type: string
      pr_number:
        description: 'A merged PR to backport (either commit_sha or pr_number must be provided)'
        required: false
        type: number
      base_branch:
        description: 'The branch to backport to'
        required: true
        type: string
      reviewer:
        description: 'The GitHub username of a reviewer to request a review from (currently supports only one reviewer)'
        required: false
        type: string

jobs:
  get_commit_sha:
    runs-on: self-hosted-docker-tiny
    outputs:
      result: ${{ steps.get_commit_sha.outputs.result }}
    steps:
      - name: Check Inputs
        run: |
          if [ -z "${{ inputs.commit_sha }}" ] && [ -z "${{ inputs.pr_number }}" ]; then
            echo "Either commit_sha or pr_number must be provided"
            exit 1
          fi
          if [ -n "${{ inputs.commit_sha }}" ] && [ -n "${{ inputs.pr_number }}" ]; then
            echo "Only one of commit_sha or pr_number can be provided"
            exit 1
          fi
      - name: Get Commit Sha
        id: get_commit_sha
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          commit_sha: ${{ inputs.commit_sha }}
          pr_number: ${{ inputs.pr_number }}
        with:
          retries: 3
          script: |
            const { commit_sha, pr_number } = process.env;
            if (commit_sha) {
              return commit_sha;
            }
            return await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            }).then(pull => {
              return pull.data.merge_commit_sha;
            });

  do_backport:
    runs-on: ubuntu-latest
    needs: get_commit_sha
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.base_branch }}
      - name: Backport to ${{ inputs.base_branch }} - Create branch & push
        id: create_branch
        shell: bash
        run: |
          commit_sha="${{ needs.get_commit_sha.outputs.result }}"
          base_branch="${{ inputs.base_branch }}"
          new_branch="automation/backport-$commit_sha-$base_branch"
          echo "Backporting commit $commit_sha to branch $base_branch (using branch $new_branch)"
          git fetch origin $base_branch
          git fetch origin $commit_sha
          # TODO(#16006): should this be the original author instead?
          git config user.email "splice-maintainers@digitalasset.com"
          git config user.name "DA Automation"
          git checkout -b $new_branch origin/$base_branch
          git cherry-pick $commit_sha
          git commit -m "[static]" --allow-empty
          git push origin $new_branch
          # output the backport branch name for use in the next step
          echo "new_branch=$new_branch" >> "$GITHUB_OUTPUT"
      - name: Backport to ${{ inputs.base_branch }} - Create PR
        id: create_pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          new_branch: ${{ steps.create_branch.outputs.new_branch }}
          base_branch: ${{ inputs.base_branch }}
          input_commit_sha: ${{ inputs.commit_sha }}
          pr_number: ${{ inputs.pr_number }}
        with:
          # Switch the GH token from the default repo token to the one for
          # canton-network-da. This ensures this is treated as a regular pull request
          # that can trigger CI.
          github-token: ${{ secrets.GH_ISSUES }}
          retries: 3
          script: |
            const { new_branch, base_branch, input_commit_sha, pr_number } = process.env;
            const backport_what = input_commit_sha ? `commit ${input_commit_sha}` : `PR #${pr_number}`;
            const title = `Backport ${backport_what} to ${base_branch}`;
            return await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              head: new_branch,
              base: base_branch,
              body: `This PR was automatically created to backport ${backport_what} to ${base_branch}.`
            }).then(pull => {
              return pull.data.number;
            });
      - name: Request review
        if: ${{ inputs.reviewer }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          reviewer: ${{ inputs.reviewer }}
          pr_number: ${{ steps.create_pr.outputs.result }}
        with:
          retries: 3
          script: |
            const { reviewer } = process.env;
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: process.env.pr_number,
              reviewers: [process.env.reviewer]
            });
  notify_on_failure:
    runs-on: self-hosted-docker-tiny
    needs: do_backport
    # If a PR was given for backporting from, notify on failure as a comment on that PR
    if: ${{ failure() && inputs.pr_number }}
    steps:
      - name: Notify on failure
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          pr_number: ${{ inputs.pr_number }}
          base_branch: ${{ inputs.base_branch }}
        with:
          # TODO(#16006): link to the logs
          retries: 3
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.pr_number,
              body: `Backport to branch ${process.env.base_branch} failed. Please check the logs for more information.`,
            });
