# Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginxImage }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/staticfile.conf
          subPath: staticfile.conf
        {{- if .Values.deploymentDetails }}
        - name: content-static
          mountPath: /usr/share/nginx/html
        {{- end }}
        {{- if .Values.runtimeDetails }}
        - name: content-runtime
          mountPath: /usr/share/nginx/html/runtime
          readOnly: true
        {{- end }}
        resources:
          {{ toYaml .Values.resources | nindent 12 }}
      {{- if .Values.runtimeDetails }}
      - name: content-runtime-updater
        image: {{ .Values.nginxImage }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -eu;

            period=60;

            html_dir=/usr/share/nginx/html;
            runtime_index_file="$html_dir/runtime/index.html";

            dso_json_path=runtime/dso.json;
            dso_json_file="$html_dir/$dso_json_path";

            echo "{\"dso\": \"/$dso_json_path\"}" > "$runtime_index_file";

            while true; do
              start_time=$(date +%s);
              exit_code=0;

              if curl -m 10 -fsS "$SCAN_URL/api/scan/v0/dso" > "$dso_json_file.new"; then
                mv "$dso_json_file.new" "$dso_json_file";
              else
                exit_code=$?;
                echo "ERROR: Failed to fetch DSO from $SCAN_URL";
              fi;

              end_time=$(date +%s);
              sleep "$((period - (end_time - start_time)))";

              if [ "$exit_code" -ne 0 ]; then
                exit $exit_code;
              fi;
            done;
        env:
          - name: SCAN_URL
            value: {{ .Values.runtimeDetails.scanUrl | quote }}
        volumeMounts:
        - name: content-runtime
          mountPath: /usr/share/nginx/html/runtime
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}-config
      {{- if .Values.deploymentDetails }}
      - name: content-static
        configMap:
          name: {{ .Release.Name }}-content-static
      {{- end }}
      {{- if .Values.runtimeDetails }}
      - name: content-runtime
        emptyDir:
          sizeLimit: 10Mi
          medium: Memory
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
