_storage {
  type = postgres
  config {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    properties = {
      serverName = ${CANTON_DOMAIN_POSTGRES_SERVER}
      portNumber = ${CANTON_DOMAIN_POSTGRES_PORT}
      databaseName = "cantonnet"
      currentSchema = "sequencer"
      user = "cnadmin"
      password = "cnadmin"
      user = ${?CANTON_DOMAIN_POSTGRES_USER}
      password = ${?CANTON_DOMAIN_POSTGRES_PASSWORD}
    }
  }
  parameters {
    migrate-and-start = yes
  }
}

canton {
  # required for key export
  features {
    enable-preview-commands = yes
  }
  parameters {
    manual-start = no
    non-standard-config = yes
  }

  sequencers {
    sequencer {
      init.auto-init=false
      storage = ${_storage}
      storage.config.properties.currentSchema = "sequencer"
      storage.config.properties.databaseName = ${?CANTON_SEQUENCER_POSTGRES_DB}

      monitoring.grpc-health-server {
        address = "0.0.0.0"
        port = 5061
      }


      public-api {
        address = "0.0.0.0"
        port = 5008
        max-token-expiration-interval = ${?SEQUENCER_TOKEN_EXPIRATION_TIME}
        # randomize to avoid issues with correlated failures
        use-exponential-random-token-expiration = true
      }

      admin-api {
        address = "0.0.0.0"
        port = 5009
        max-inbound-message-size = 104857600 # 100MB
      }


      # Reduced time proof request interval here (default 24h)
      # so that sequencer will not block other sequencers from pruning even there is lack of activities
      # ref: https://github.com/DACH-NY/canton/issues/16371#issuecomment-1885005687
      # Note that this needs to be shorter than the SEQUENCER_RETENTION_PERIOD
      # or our own sequencer will prevent pruning.
      # Time requests are much less expensive than Daml transactions
      # so given our target load this is neglible.
      time-tracker.min-observation-duration = 30m

      sequencer {
        config {
          cometbft-node-host = ${SEQUENCER_DRIVER_COMETBFT_HOST}
          cometbft-node-port = ${SEQUENCER_DRIVER_COMETBFT_PORT}
        }
        type = "CometBFT"
      }

    }
  }
}
