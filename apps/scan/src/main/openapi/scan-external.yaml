openapi: 3.0.0
info:
  title: Scan API
  version: 0.0.1
tags:
  - name: scan
servers:
  - url: https://example.com/api/scan
paths:
  /v0/domains/{domain_id}/members/{member_id}/traffic-status:
    get:
      tags: [scan]
      x-jvm-package: external.scan
      operationId: "getMemberTrafficStatus"
      parameters:
        - name: "domain_id"
          in: "path"
          required: true
          schema:
            type: string
        - name: "member_id"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetMemberTrafficStatusResponse"
        "400":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/400"
        "404":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/404"
        "500":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/500"
  /v0/domains/{domain_id}/parties/{party_id}/participant-id:
    get:
      tags: [scan]
      x-jvm-package: external.scan
      operationId: "getPartyToParticipant"
      parameters:
        - name: "domain_id"
          in: "path"
          required: true
          schema:
            type: string
        - name: "party_id"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetPartyToParticipantResponse"
        "404":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/404"
        "500":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/500"
  /v0/validators/validator-faucets:
    get:
      tags: [ scan ]
      x-jvm-package: external.scan
      operationId: "getValidatorFaucetsByValidator"
      parameters:
        - name: validator_ids
          in: query
          required: true
          description: A comma-separated list of validator party IDs
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetValidatorFaucetsByValidatorResponse"
        "400":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/400"
        "404":
          $ref: "../../../../common/src/main/openapi/common-external.yaml#/components/responses/404"
components:
  schemas:
    GetMemberTrafficStatusResponse:
      type: object
      required: [ "traffic_status" ]
      properties:
        traffic_status:
          "$ref": "#/components/schemas/MemberTrafficStatus"
    MemberTrafficStatus:
      type: object
      required: [ "actual", "target" ]
      properties:
        actual:
          "$ref": "#/components/schemas/ActualMemberTrafficState"
        target:
          "$ref": "#/components/schemas/TargetMemberTrafficState"
    ActualMemberTrafficState:
      type: object
      required: [ "total_consumed", "total_limit" ]
      properties:
        total_consumed:
          description: |
            Total extra traffic consumed by the member on the given domain
          type: integer
          format: int64
        total_limit:
          description: |
            Current extra traffic limit set for the member on the given domain.
            An extra traffic top-up is complete once total_limit matches total_purchased.
          type: integer
          format: int64
    TargetMemberTrafficState:
      type: object
      required: [ "total_purchased" ]
      properties:
        total_purchased:
          description: |
            Total extra traffic purchased for the member on the given domain in bytes.
          type: integer
          format: int64
    GetPartyToParticipantResponse:
      type: object
      required: [ "participant_id" ]
      properties:
        participant_id:
          description: |
            ID of the participant hosting the provided party
          type: string
    GetValidatorFaucetsByValidatorResponse:
      type: object
      required: [ "validatorsReceivedFaucets" ]
      properties:
        validatorsReceivedFaucets:
          type: array
          items:
            $ref: "#/components/schemas/ValidatorReceivedFaucets"
    ValidatorReceivedFaucets:
      type: object
      required:
        [
          "validator",
          "numRoundsCollected",
          "numRoundsMissed",
          "firstCollectedInRound",
          "lastCollectedInRound",
        ]
      properties:
        validator:
          type: string
        numRoundsCollected:
          type: integer
          format: int64
        numRoundsMissed:
          type: integer
          format: int64
        firstCollectedInRound:
          type: integer
          format: int64
        lastCollectedInRound:
          type: integer
          format: int64
