_validator_participant_remote {
  admin-api.port = 5702
  ledger-api.client-config.port = 5701
  ledger-api.auth-config.type = "none"
}

_scan_client {
  admin-api.url = ${NETWORK_APPS_ADDRESS_PROTOCOL}"://scan.sv-2."${NETWORK_APPS_ADDRESS}""
}

_scan_client_validator {
  type = "trust-single"
  url = ${_scan_client.admin-api.url}
}

canton {
  validator-apps {
    splitwellValidatorApp {
      domain-migration-id=${MIGRATION_ID}
      storage {
        type = postgres
        config {
          dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
          properties = {
            serverName = "localhost"
            serverName = ${?CANTON_DB_HOST}
            portNumber = "5432"
            portNumber = ${?CANTON_DB_PORT}
            user = "canton"
            user = ${?CANTON_DB_USER}
            password = "supersafe"
            password = ${?CANTON_DB_PASSWORD}
          }
        }
        parameters {
          # The following is an educated guess of a sane default for the number of DB connections.
          # https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
          max-connections = 64
        }
      }
      admin-api.port = 5703
      participant-client = ${_validator_participant_remote}
      ledger-api-user = "validator_user"
      ledger-api-user = ${?VALIDATOR_USER_NAME}
      scan-client = ${_scan_client_validator}
# BEGIN_SPLITWELL_CONFIG
      auth {
        algorithm = "hs-256-unsafe"
        audience = "OIDC_AUTHORITY_LEDGER_API_AUDIENCE"
        secret = "test"
      }
      app-instances {
        splitwell {
          service-user = "splitwell-service-user"
          dars = ["dars/splitwell-current.dar"]
        }
      }
# END_SPLITWELL_CONFIG
      domains {
        global {
          alias = "global"
          url = ${?GLOBAL_DOMAIN_URL}
          buy-extra-traffic {
            target-throughput: 100000
            min-topup-interval: 1m
          }
        }
      }
    }
  }
}
