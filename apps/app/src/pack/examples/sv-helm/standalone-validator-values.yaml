participantAddress: "participant"

# URL of sponsoring SV for onboarding your validator
svSponsorAddress: "SPONSOR_SV_URL"
onboardingSecretFrom:
  secretKeyRef:
    name: splice-app-validator-onboarding-validator
    key: secret
    optional: false
# Party ID hint for the validator operator party, should be of format <organization>-<function>-<enumerator>,
# e.g. digitalAsset-finance-1
validatorPartyHint: "YOUR_VALIDATOR_PARTY_HINT"

# MIGRATION_START
# Replace MIGRATION_ID with the migration ID of the global synchronizer.
migration:
  id: "MIGRATION_ID"
  # Uncomment this when redeploying as part of a migration, i.e., MIGRATION_ID was incremented and a migration dump was exported to the attached pvc.
  # migrating: true
#MIGRATION_END

persistence:
  secretName: postgres-secrets
  host: postgres

# Uncomment the following block if you want to restore from a participant dump
# and recover your balance
# PARTICIPANT_BOOTSTRAP_MIGRATE_TO_NEW_PARTICIPANT_START
# participantIdentitiesDumpImport:
#   secretName: participant-bootstrap-dump
#   # Make sure to also adjust nodeIdentifier to the same value
#   newParticipantIdentifier: put-some-new-string-never-used-before
# migrateValidatorParty: true
# PARTICIPANT_BOOTSTRAP_MIGRATE_TO_NEW_PARTICIPANT_END

# Replace YOUR_VALIDATOR_NODE_NAME with the name you provided for your validator identity.
# This value will be used for the node identifier of your participant.
nodeIdentifier: "YOUR_VALIDATOR_NODE_NAME"

# CONFIGURING_TOPUP_START
# Configuring a validator's traffic top-up loop;
# see documentation for more detailed information.
topup:
  # set to false in order to disable automatic traffic top-ups
  enabled: true
  # target throughput in bytes / second of sequenced traffic; targetThroughput=0 <=> enabled=false
  targetThroughput: 20000
  # minTopupInterval - minimum time interval that must elapse before the next top-up
  minTopupInterval: "1m"
# CONFIGURING_TOPUP_END
