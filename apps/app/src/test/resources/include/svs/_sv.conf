{
  include required("../splice-instance-names.conf")
  storage {
    type = postgres
    config {
      dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
      properties = {
        serverName = "localhost"
        serverName = ${?POSTGRES_HOST}
        portNumber = "5432"
        portNumber = ${?POSTGRES_PORT}
        databaseName = "cn_apps"
        user = "canton"
        user = ${?POSTGRES_USER}
        password = "supersafe"
        password = ${?POSTGRES_PASSWORD}
      }
    }
  }
  participant-client = {
    admin-api.port = 5102
    ledger-api.client-config.port = 5101
    ledger-api.auth-config.type = "none" # we override this via config transform
  }
  auth {
    algorithm = "hs-256-unsafe"
    audience = ${OIDC_AUTHORITY_SV_AUDIENCE}
    secret = "test"
  }
  domains {
    global {
      alias = "global"
      url = "http://localhost:5108"
    }
  }
  automation {
    # amulet expiry and unclaimed reward expiry are not problematic in our tests environments as participants do not go offline.
    # TODO(M3-63) Currently, auto-expiration of unclaimed rewards and amulet expiry is disabled by default
    enable-expire-amulet = true

    enable-expire-validator-faucet = true

    # TODO(#7649) revise and/or remove
    enable-dso-delegate-replacement-trigger = true

    # CometBFT reconciliation is disabled by default as it would destabilize the CometBFT network by reflecting the
    # DSORules state in the topology of the CometBFT network, therefore nodes would be added and remove as validators quite often,
    # leading to a very slow CometBFT network
    enable-cometbft-reconciliation = false

    paused-triggers = [
      "org.lfdecentralizedtrust.splice.automation.AssignTrigger",
      "org.lfdecentralizedtrust.splice.automation.AmuletConfigReassignmentTrigger",
      "org.lfdecentralizedtrust.splice.automation.TransferFollowTrigger",
      "org.lfdecentralizedtrust.splice.sv.automation.delegatebased.ExpiredAmuletTrigger",
      "org.lfdecentralizedtrust.splice.sv.automation.delegatebased.ExpiredLockedAmuletTrigger",
      "org.lfdecentralizedtrust.splice.sv.automation.delegatebased.ExpiredAnsSubscriptionTrigger"
    ]
  }
  # Ensure we get frequent acks to handle our aggressive pruning intervals in tests
  time-tracker-min-observation-duration = 10s
}
