include required("storage-postgres.conf")

_sequencer_bft_template {
    type = "BFT"
    config = {
        storage=${_shared.storage}
        initial-network {
             server-endpoint {
                address="0.0.0.0"
                external-address = "localhost"
                external-tls-config.enabled=false
             }
             peer-endpoints = []
        }
    }
}

_sequencer_reference_template {
  init {
    # In Splice, the node identifier is always set by the application controlling the canton node.
    # We therefore disable auto-init, and set the node identifier to an invalid value, as it should never be used.
    generate-topology-transactions-and-keys = false
    identity.type = manual
  }
  sequencer-client {
    use-new-connection-pool = false
  }
  parameters {
    batching.max-pruning-time-interval = "10 minutes"
  }
  sequencer {
    config {
      storage = ${_shared.storage}
      storage.config.properties.databaseName = "sequencer_driver"
    }
    type = reference
    block {
      writer {
        type = high-throughput
        // maximum memory the buffered events will occupy
        buffered-events-max-memory = 20MiB // higher value than default (2MiB) but smaller than prod to avoid excessive memory use in tests
        payload-queue-size = 2500
      }
    }
  }
  storage = ${_shared.storage}
  # Reduced time proof request interval here (default 24h)
  # so that sequencer will not block other sequencers from pruning even there is lack of activities
  # ref: https://github.com/DACH-NY/canton/issues/16371#issuecomment-1885005687
  time-tracker.min-observation-duration = 10s
  public-api.stream.limits = {
    "com.digitalasset.canton.sequencer.api.v30.SequencerService/DownloadTopologyStateForInit" : 3,
    "com.digitalasset.canton.sequencer.api.v30.SequencerService/Subscribe" : 1000,
  }
  admin-api.stream.limits {
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/GenesisState": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/GenesisStateV2": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/ExportTopologySnapshot": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/ExportTopologySnapshotV2": 1,
    "com.digitalasset.canton.sequencer.admin.v30.SequencerAdministrationService/OnboardingState": 1,
    "com.digitalasset.canton.sequencer.admin.v30.SequencerAdministrationService/OnboardingStateV2": 1
  }
  admin-api.stream.limits {
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/GenesisState": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/GenesisStateV2": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/ExportTopologySnapshot": 1,
    "com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService/ExportTopologySnapshotV2": 1,
    "com.digitalasset.canton.sequencer.admin.v30.SequencerAdministrationService/OnboardingState": 1,
    "com.digitalasset.canton.sequencer.admin.v30.SequencerAdministrationService/OnboardingStateV2": 1
  }
}
