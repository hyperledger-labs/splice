{
  include required("../splice-instance-names.conf")

  storage = ${_shared.storage}
  storage {
    config {
      properties = {
        databaseName = "splice_apps"
      }
    }
  }
  admin-api.address = 0.0.0.0
  participant-client {
    ledger-api.auth-config.type = "none"
  }

  parameters {
    rate-limiting {
      default {
        # use a really high default rate limit to avoid rate limiting in tests (to account for the rate limiter cold start -- starts from 0 available
        # requests and only starts with the first request)
        rate-per-second = 2000
      }
      rate-limiters {
        getAcsSnapshot.rate-per-second = 20
      }
    }
  }

  # Reduce in tests as SVs change relatively frequently here.
  cache {
      sv-node-state {
       ttl = 1s
       max-size = 1
      }
      total-amulet-balance {
       ttl = 1s
       max-size = 1
      }
      amulet-rules {
       ttl = 1s
       max-size = 1
      }
      ans-rules {
       ttl = 1s
       max-size = 1
      }
      total-rewards-collected {
       ttl = 1s
       max-size = 1
      }
      rewards-collected-in-round {
       ttl = 1s
       max-size = 1
      }
      wallet-balance {
       ttl = 1s
       max-size = 1
      }
      amulet-config-for-round {
       ttl = 1s
       max-size = 1
      }
      round-of-latest-data {
       ttl = 1s
       max-size = 1
      }
      top-providers-by-app-rewards {
       ttl = 1s
       max-size = 1
      }
      top-validators {
       ttl = 1s
       max-size = 1
      }
      validator-license-by-validator {
       ttl = 1s
       max-size = 1
      }
      total-purchased-member-traffic {
       ttl = 1s
       max-size = 1
      }
      cached-by-party {
       ttl = 1s
       max-size = 1
      }
      aggregated-rounds {
       ttl = 1s
       max-size = 1
      }
      round-totals {
       ttl = 1s
       max-size = 1
      }
      vote-requests {
       ttl = 1s
       max-size = 1
      }
  }

  parameters {
    custom-timeouts {
      # names should match those of the OpenAPI definition
      getAcsSnapshot = 1 minute
    }
  }
}
